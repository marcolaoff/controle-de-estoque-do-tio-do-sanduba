name: CI/CD Pipeline - Docker Test

on:
  push:
    branches:
      - main
      - marcoantonio
  pull_request:
    branches:
      - main
      - marcoantonio

jobs:
  build_and_test:
    name: Build e Testar Aplicação
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: estoque_tio_sanduba
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # 1. Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v3

      # 2. Configurar Java
      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Instalar Docker Compose
      - name: Instalar Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # 4. Instalação de dependências Maven
      - name: Instalar dependências do Maven
        run: |
          cd backend
          mvn clean install -DskipTests

      # 5. Build da aplicação com Maven
      - name: Build da aplicação com Maven
        run: |
          cd backend
          mvn clean package -DskipTests

      # 6. Subir containers com Docker Compose
      - name: Subir containers com Docker Compose
        run: |
          cd backend
          docker-compose up --build -d

      # 7. Verificar status dos containers
      - name: Verificar status dos containers
        run: docker ps -a

      # 8. Testar endpoint da aplicação
      - name: Testar endpoint da aplicação
        run: |
          sleep 20  # Aguarda a aplicação subir
          curl -f http://localhost:8080/produtos || exit 1

      # 9. Parar e Remover containers
      - name: Parar e remover containers
        run: |
          cd backend
          docker-compose down
